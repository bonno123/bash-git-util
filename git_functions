source ~/bash-functions/bash_dropdown.sh

function is_current_branch(){
    if [[ $1 == "*"* ]];
        then
            true
        else
            false
    fi
}

# function trim_string(){
#     # return "${1#"${1%%[![:space:]]*}"}"
#     local var="$*"
#     # remove leading whitespace characters
#     var="${var#"${var%%[![:space:]]*}"}"
#     # remove trailing whitespace characters
#     var="${var%"${var##*[![:space:]]}"}"
#     printf '%s' "$var"
#     # return $1 | xargs
#     $var
# }


function git_branch(){
    
    #Set the field separator to new line
    IFS=$'\n'

    local gitBranchStdOut=$(git branch)

    declare -a branchesAsList=()  


    local branch_count=0
    local curent_branch=''



    # Iterate over each line
    for branch in $gitBranchStdOut
        do
            branch_count=$((branch_count+1))

            # branchesAsList+=("${branch}")

            # remove leading whitespace characters
            branch="${branch#"${branch%%[![:space:]]*}"}"


            is_current_branch $branch
            is_current=$?

            if [[ $is_current == 0 ]];
                then
                   curent_branch=$branch
                else
                    branchesAsList+=("${branch}")
            fi
            
            # echo $is_current
            # echo $curent_branch

        done
    

    echo you are currently on branch named $curent_branch| sed 's/* //'
    echo Select a branch out of  $((branch_count-1)) branches for switch 
    echo hint: use up/down keys and enter to confirm:


    select_option "${branchesAsList[@]}"
    local selected_branch_index=$?
    local selected_branch=${branchesAsList[selected_branch_index]}

    # echo $selected_branch_index
    # echo $selected_branch

    git checkout $selected_branch 
}

